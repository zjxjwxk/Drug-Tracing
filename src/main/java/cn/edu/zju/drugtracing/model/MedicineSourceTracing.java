package cn.edu.zju.drugtracing.model;

import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 3.6.0.
 */
public class MedicineSourceTracing extends Contract {
    private static final String BINARY = "608060405234801561001057600080fd5b50611af5806100206000396000f3006080604052600436106100c45763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166302f92fdb81146100c957806308e9356014610160578063122e1330146101c9578063194f10231461047257806329997426146104a15780633e60acec1461054757806344a9a5cf146105c05780636419492e1461062a5780639067f9ff146106915780639c700eb6146106cb578063bf33afa514610744578063e13992a314610775578063e26d82ac1461079c575b600080fd5b3480156100d557600080fd5b506100eb600160b860020a031960043516610803565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561012557818101518382015260200161010d565b50505050905090810190601f1680156101525780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561016c57600080fd5b5060408051602060046024803582810135601f81018590048502860185019096528585526100eb958335600160a060020a031695369560449491939091019190819084018382808284375094975050933594506108ce9350505050565b3480156101d557600080fd5b506101eb600160b860020a0319600435166109f1565b6040518080602001806020018060200180602001898152602001806020018881526020018060200187810387528f818151815260200191508051906020019080838360005b83811015610248578181015183820152602001610230565b50505050905090810190601f1680156102755780820380516001836020036101000a031916815260200191505b5087810386528e818151815260200191508051906020019080838360005b838110156102ab578181015183820152602001610293565b50505050905090810190601f1680156102d85780820380516001836020036101000a031916815260200191505b5087810385528d5181528d516020918201918f019080838360005b8381101561030b5781810151838201526020016102f3565b50505050905090810190601f1680156103385780820380516001836020036101000a031916815260200191505b5087810384528c5181528c516020918201918e019080838360005b8381101561036b578181015183820152602001610353565b50505050905090810190601f1680156103985780820380516001836020036101000a031916815260200191505b5087810383528a5181528a516020918201918c019080838360005b838110156103cb5781810151838201526020016103b3565b50505050905090810190601f1680156103f85780820380516001836020036101000a031916815260200191505b5087810382528851815288516020918201918a019080838360005b8381101561042b578181015183820152602001610413565b50505050905090810190601f1680156104585780820380516001836020036101000a031916815260200191505b509e50505050505050505050505050505060405180910390f35b34801561047e57600080fd5b506100eb600160b860020a031960043516600160d060020a031960243516610f62565b3480156104ad57600080fd5b5060408051602060046024803582810135601f81018590048502860185019096528585526100eb958335600160e860020a03191695369560449491939091019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a9998810197919650918201945092508291508401838280828437509497506111c09650505050505050565b34801561055357600080fd5b50604080516020601f6064356004818101359283018490048402850184019095528184526100eb94600160d060020a031981351694600160a060020a03602480359190911695604435953695608494930191819084018382808284375094975061131e9650505050505050565b3480156105cc57600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526100eb948235600160d060020a0319169460248035953695946064949201919081908401838280828437509497506114b09650505050505050565b34801561063657600080fd5b5060408051602060046024803582810135601f81018590048502860185019096528585526100eb958335600160a060020a03169536956044949193909101919081908401838280828437509497506115a69650505050505050565b34801561069d57600080fd5b506100eb600160b860020a031960043516602435600160a060020a03604435811690606435166084356116a5565b3480156106d757600080fd5b50604080516020601f6064356004818101359283018490048402850184019095528184526100eb94600160b860020a031981351694600160a060020a03602480359190911695604435953695608494930191819084018382808284375094975061178b9650505050505050565b34801561075057600080fd5b506100eb600160d060020a031960043516602435600160a060020a036044351661186a565b34801561078157600080fd5b506100eb600160a060020a03600435166024356044356118f2565b3480156107a857600080fd5b5060408051602060046024803582810135601f81018590048502860185019096528585526100eb958335600160a060020a03169536956044949193909101919081908401838280828437509497506119af9650505050505050565b600160b860020a031981166000908152600760209081526040808320600290810154600160a060020a031680855260068452938290206001908101805484516101009382161593909302600019011692909204601f8101859004850282018501909352828152606094939092908301828280156108c15780601f10610896576101008083540402835291602001916108c1565b820191906000526020600020905b8154815290600101906020018083116108a457829003601f168201915b5050505050915050919050565b60606000600160a060020a03851615156108e6573394505b600160a060020a0385811660009081526006602052604090205416151561090f57506000610913565b5060015b600160a060020a03851660008181526006602090815260409091208054600160a060020a031916909217825585516109519260010191870190611a2e565b50600160a060020a03851660009081526006602052604090206002018390558015156109b25760408051808201909152601281527fe6b3a8e5868ce794a8e688b7e68890e58a9f0000000000000000000000000000602082015291506109e9565b60408051808201909152601881527fe794a8e688b7e4bfa1e681afe4bfaee694b9e68890e58a9f0000000000000000602082015291505b509392505050565b600160e860020a031981166000908152600160208181526040808420830180548251600295821615610100026000190190911694909404601f810184900484028501840190925281845260609485948594859492938593859385938c938493879392830182828015610aa45780601f10610a7957610100808354040283529160200191610aa4565b820191906000526020600020905b815481529060010190602001808311610a8757829003601f168201915b50505050509a5060016000847cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020016000206002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b955780601f10610b6a57610100808354040283529160200191610b95565b820191906000526020600020905b815481529060010190602001808311610b7857829003601f168201915b50505050600160d060020a031984166000908152600360209081526040918290206002908101805484516001821615610100026000190190911692909204601f8101849004840283018401909452838252949e50939250830182828015610c3d5780601f10610c1257610100808354040283529160200191610c3d565b820191906000526020600020905b815481529060010190602001808311610c2057829003601f168201915b50505050600160d060020a0319841660009081526003602090815260408083205466010000000000009004600160a060020a031680845283835292819020600190810180548351600261010094831615949094026000190190911692909204601f8101859004850283018501909352828252959e5092955091939250830182828015610d0a5780601f10610cdf57610100808354040283529160200191610d0a565b820191906000526020600020905b815481529060010190602001808311610ced57829003601f168201915b50505050600160d060020a0319841660009081526005602090815260408083206003810154600191820154600160a060020a03168086526004855294839020820180548451600261010095831615959095026000190190911693909304601f8101869004860284018601909452838352969e509c5092955091939250830182828015610dd75780601f10610dac57610100808354040283529160200191610dd7565b820191906000526020600020905b815481529060010190602001808311610dba57829003601f168201915b50505050509550600560008379ffffffffffffffffffffffffffffffffffffffffffffffffffff191679ffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001908152602001600020600401549450600760008d76ffffffffffffffffffffffffffffffffffffffffffffff191676ffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060020160009054906101000a9004600160a060020a031690506006600082600160a060020a0316600160a060020a031681526020019081526020016000206001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f4d5780601f10610f2257610100808354040283529160200191610f4d565b820191906000526020600020905b815481529060010190602001808311610f3057829003601f168201915b50505050509350505050919395975091939597565b600160d060020a03198116600090815260036020526040812060010154606091901515610fed57606060405190810160405280602781526020017fe5a4a7e58c85e4bfa1e681afe4b88de5ad98e59ca8efbc8ce8afb7e9878de69681526020017fb0e8be93e585a50000000000000000000000000000000000000000000000000081525091506111b9565b5060005b60068110156111115782816006811061100657fe5b1a7f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916848260098110151561105957fe5b1a7f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614151561110957606060405190810160405280602481526020017fe4bfa1e681afe8be93e585a5e69c89e8afafefbc8ce8afb7e9878de696b0e8be81526020017f93e585a50000000000000000000000000000000000000000000000000000000081525091506111b9565b600101610ff1565b600160d060020a0319831660009081526002602090815260408083208054600181018255908452928290206003808504909101805468ffffffffffffffffff929095066009026101000a9182021990941677010000000000000000000000000000000000000000000000890491909102179092558151808301909252601882527fe58c85e8a385e4bfa1e681afe4b88ae4bca0e68890e58a9f00000000000000009082015291505b5092915050565b600160e860020a031983166000908152600160205260408120600301546060919015156111ef575060006111f3565b5060015b600160e860020a031985166000908152600160208181526040909220805462ffffff19167d0100000000000000000000000000000000000000000000000000000000008904178155865161124f93919092019190870190611a2e565b50600160e860020a031985166000908152600160209081526040909120845161128092600290920191860190611a2e565b50600160e860020a031985166000908152600160208190526040909120600301558015156112e35760408051808201909152601581527fe696b0e9858de696b9e4b88ae4bca0e68890e58a9f0000000000000000000000602082015291506109e9565b60408051808201909152601e81527fe9858de696b9e5b7b2e5ad98e59ca8efbc8ce4bfaee694b9e68890e58a9f0000602082015291506109e9565b60606000600160a060020a0385161515611336573394505b831515611341574293505b600160d060020a03198616600090815260036020526040902060010154151561136c57506000611370565b5060015b600160d060020a031986166000908152600360209081526040909120805465ffffffffffff19167a01000000000000000000000000000000000000000000000000000089041779ffffffffffffffffffffffffffffffffffffffff00000000000019166601000000000000600160a060020a0389160217815560018101869055845161140492600290920191860190611a2e565b508015156114475760408051808201909152601e81527fe88dafe59381e7949fe4baa7e4bfa1e681afe4b88ae4bca0e68890e58a9f0000602082015291506114a7565b606060405190810160405280602a81526020017fe88dafe59381e4bfa1e681afe5b7b2e5ad98e59ca8efbc8ce4bfa1e681afe69b81526020017fb4e696b0e68890e58a9f0000000000000000000000000000000000000000000081525091505b50949350505050565b60608215156114bd574292505b50600160d060020a03198316600090815260056020818152604080842080547a010000000000000000000000000000000000000000000000000000890465ffffffffffff199091161780825560038085529583902054948452600160a060020a036601000000000000958690041690940279ffffffffffffffffffffffffffffffffffffffff00000000000019909416939093178355600183018054600160a060020a03191633179055929091018490558151808301909252600c82527fe58f96e8b4a7e68890e58a9f0000000000000000000000000000000000000000908201529392505050565b60606000600160a060020a03841615156115be573393505b600160a060020a038481166000908152602081905260409020541615156115e7575060006115eb565b5060015b600160a060020a0384166000818152602081815260409091208054600160a060020a031916909217825584516116279260010191860190611a2e565b5080151561166a5760408051808201909152601281527fe6b3a8e5868ce794a8e688b7e68890e58a9f0000000000000000000000000000602082015291506111b9565b60408051808201909152601881527fe794a8e688b7e4bfa1e681afe4bfaee694b9e68890e58a9f0000000000000000602082015291506111b9565b60608415156116b2574294505b600160a060020a03841615156116c6573393505b50600160b860020a03198516600090815260076020908152604091829020805468ffffffffffffffffff1916770100000000000000000000000000000000000000000000009098049790971787556001870195909555600286018054600160a060020a0319908116600160a060020a039687161790915560038701805490911693909416929092179092556004909301558151808301909252601882527fe99bb6e594aee4bfa1e681afe4b88ae4bca0e68890e58a9f00000000000000009082015290565b6060821515611798574292505b600160a060020a03841615156117ac573393505b600160b860020a03198516600090815260096020908152604090912060028101805468ffffffffffffffffff19167701000000000000000000000000000000000000000000000089041790558054600160a060020a031916600160a060020a03871617815560018101859055835161182c92600390920191850190611a2e565b505060408051808201909152601281527fe4bfa1e681afe58f8de9a688e68890e58a9f00000000000000000000000000006020820152949350505050565b6060821515611877574292505b50600160d060020a03198316600090815260056020908152604091829020600481018590556002018054600160a060020a038516600160a060020a03199091161790558151808301909252600c82527fe98081e8bebee68890e58a9f0000000000000000000000000000000000000000908201529392505050565b60606000600160a060020a038516151561190a573394505b600160a060020a0385811660009081526008602052604090205416151561193357506000611937565b5060015b600160a060020a03851660008181526008602052604090208054600160a060020a0319169091178155600181018590556002018390558015156109b25760408051808201909152601281527fe6b3a8e5868ce794a8e688b7e68890e58a9f0000000000000000000000000000602082015291506109e9565b60606000600160a060020a03841615156119c7573393505b600160a060020a038481166000908152600460205260409020541615156119f0575060006119f4565b5060015b600160a060020a03841660008181526004602090815260409091208054600160a060020a0319169092178255845161162792600101918601905b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611a6f57805160ff1916838001178555611a9c565b82800160010185558215611a9c579182015b82811115611a9c578251825591602001919060010190611a81565b50611aa8929150611aac565b5090565b611ac691905b80821115611aa85760008155600101611ab2565b905600a165627a7a72305820b83b25184fd1108bf57ec2249d159a81b4662986134f7fd7ad5e98abe181eeb40029";

    public static final String FUNC_GETSELLERNAME = "getSellerName";

    public static final String FUNC_SETSELLER = "setSeller";

    public static final String FUNC_TRACE = "trace";

    public static final String FUNC_PACK = "pack";

    public static final String FUNC_SETFORMULATION = "setFormulation";

    public static final String FUNC_SETBOXINFO = "setBoxInfo";

    public static final String FUNC_PICK = "pick";

    public static final String FUNC_SETMANUFACTURER = "setManufacturer";

    public static final String FUNC_SETSELLINFO = "setSellInfo";

    public static final String FUNC_FEEDBACK = "feedBack";

    public static final String FUNC_DROP = "drop";

    public static final String FUNC_SETCONSUMER = "setConsumer";

    public static final String FUNC_SETTRANSPORTER = "setTransporter";

    @Deprecated
    protected MedicineSourceTracing(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected MedicineSourceTracing(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected MedicineSourceTracing(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected MedicineSourceTracing(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<TransactionReceipt> getSellerName(byte[] packageID) {
        final Function function = new Function(
                FUNC_GETSELLERNAME, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes9(packageID)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> setSeller(String sellerAddr, byte[] sellerName, BigInteger sellerType) {
        final Function function = new Function(
                FUNC_SETSELLER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(sellerAddr), 
                new org.web3j.abi.datatypes.DynamicBytes(sellerName), 
                new org.web3j.abi.datatypes.generated.Uint256(sellerType)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> trace(byte[] packageID) {
        final Function function = new Function(
                FUNC_TRACE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes9(packageID)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> pack(byte[] packageID, byte[] boxID) {
        final Function function = new Function(
                FUNC_PACK, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes9(packageID), 
                new org.web3j.abi.datatypes.generated.Bytes6(boxID)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> setFormulation(byte[] drugID, byte[] drugName, byte[] material) {
        final Function function = new Function(
                FUNC_SETFORMULATION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes3(drugID), 
                new org.web3j.abi.datatypes.DynamicBytes(drugName), 
                new org.web3j.abi.datatypes.DynamicBytes(material)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> setBoxInfo(byte[] boxID, String manufacturerAddr, BigInteger time, byte[] materialID) {
        final Function function = new Function(
                FUNC_SETBOXINFO, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes6(boxID), 
                new org.web3j.abi.datatypes.Address(manufacturerAddr), 
                new org.web3j.abi.datatypes.generated.Uint256(time), 
                new org.web3j.abi.datatypes.DynamicBytes(materialID)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> pick(byte[] boxID, BigInteger time, byte[] orderID) {
        final Function function = new Function(
                FUNC_PICK, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes6(boxID), 
                new org.web3j.abi.datatypes.generated.Uint256(time), 
                new org.web3j.abi.datatypes.DynamicBytes(orderID)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> setManufacturer(String manufacturerAddr, byte[] manufacturerName) {
        final Function function = new Function(
                FUNC_SETMANUFACTURER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(manufacturerAddr), 
                new org.web3j.abi.datatypes.DynamicBytes(manufacturerName)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> setSellInfo(byte[] packageID, BigInteger time, String sellerAddr, String consumerAddr, BigInteger price) {
        final Function function = new Function(
                FUNC_SETSELLINFO, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes9(packageID), 
                new org.web3j.abi.datatypes.generated.Uint256(time), 
                new org.web3j.abi.datatypes.Address(sellerAddr), 
                new org.web3j.abi.datatypes.Address(consumerAddr), 
                new org.web3j.abi.datatypes.generated.Uint256(price)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> feedBack(byte[] packageID, String consumerAddr, BigInteger time, byte[] information) {
        final Function function = new Function(
                FUNC_FEEDBACK, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes9(packageID), 
                new org.web3j.abi.datatypes.Address(consumerAddr), 
                new org.web3j.abi.datatypes.generated.Uint256(time), 
                new org.web3j.abi.datatypes.DynamicBytes(information)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> drop(byte[] boxID, BigInteger time, String sellerAddr) {
        final Function function = new Function(
                FUNC_DROP, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes6(boxID), 
                new org.web3j.abi.datatypes.generated.Uint256(time), 
                new org.web3j.abi.datatypes.Address(sellerAddr)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> setConsumer(String consumerAddr, BigInteger gender, BigInteger age) {
        final Function function = new Function(
                FUNC_SETCONSUMER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(consumerAddr), 
                new org.web3j.abi.datatypes.generated.Uint256(gender), 
                new org.web3j.abi.datatypes.generated.Uint256(age)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> setTransporter(String transporterAddr, byte[] transporterName) {
        final Function function = new Function(
                FUNC_SETTRANSPORTER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(transporterAddr), 
                new org.web3j.abi.datatypes.DynamicBytes(transporterName)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public static RemoteCall<MedicineSourceTracing> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(MedicineSourceTracing.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<MedicineSourceTracing> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(MedicineSourceTracing.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<MedicineSourceTracing> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(MedicineSourceTracing.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<MedicineSourceTracing> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(MedicineSourceTracing.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static MedicineSourceTracing load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new MedicineSourceTracing(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static MedicineSourceTracing load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new MedicineSourceTracing(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static MedicineSourceTracing load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new MedicineSourceTracing(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static MedicineSourceTracing load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new MedicineSourceTracing(contractAddress, web3j, transactionManager, contractGasProvider);
    }
}
